# Really basic infos if you want to fork bozon:

## $_SESSION vars: 
### Used to pass all the context vars
- current_path : current path in the upload tree
- upload_path : name of the upload root folder
- id_file : id filename
- filter : the current file mask filter
- home : the server URL

##Â core.php : 
### All the functions and init part, creating context and folders when bozon first starts

## admin.php :
### Handles the admin part: $_GET commands & admin page content.
#### beware ! because of obvious security problems, you must add a $_GET['token'] var generated by the newToken(false) or returnToken() functions: just add those functions to your link in your code (those functions are part of auto_restrict)
- $_GET['url'] to get a local version of a remote file 
- $_GET['del'] to delete local files and folders (del=id file)
- $_GET['ren'] & $_GET['newname'] : rename a file/folder; ren=id file
- $_GET['newfolder'] : create a folder in the current path;
- $_GET['purge'] : force the purgeID (delete old ids that doesn't leads to an actual file or folder)

## index.php
### handles the public part
- $_GET['f'] (f=id file) returns the file corresponding with the ID

## auto_restrict.php : 
### Allows the admin's access, security stuff, sanitize $_GET/$_POST, IP bannishment etc

## auto_dropzone.php : 
### Handles the drag & drop feature (draws the dropzone and handles the file upload)

## auto_thumb.php : 
### Handles which handles the thumbnails generation

## listfiles.php :
### lists all the files/folders in the current_path.
You'll find here the file/folder item template, the listing loop function and the auto_thumb function 

## IP_file.txt (if you don't rename it):
### a json file containing an array [ID]=>"file/path/file.ext"
To get the path from the id use is2file and file2id to get the opposit.


